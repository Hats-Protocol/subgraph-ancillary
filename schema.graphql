enum HatsSignerGateType {
  Single
  Multi
}

type HatAuthorities @entity {
  id: ID!
  hsgOwner: [HatsSignerGate!]! @derivedFrom(field: "ownerHat")
  hsgSigner: [HatsSignerGate!]! @derivedFrom(field: "signerHats")
  jokeraceAdmin: [JokeRaceEligibility!]! @derivedFrom(field: "adminHat")
  allowListOwner: [AllowListEligibility!]! @derivedFrom(field: "ownerHat")
  allowListArbitrator: [AllowListEligibility!]!
    @derivedFrom(field: "arbitratorHat")
  electionsBallotBox: [HatsElectionEligibility!]!
    @derivedFrom(field: "ballotBoxHat")
  electionsAdmin: [HatsElectionEligibility!]! @derivedFrom(field: "adminHat")
  eligibilityTogglePassthrough: [PassthroughModule!]!
    @derivedFrom(field: "passthroughHat")
}

type HatsSignerGate @entity {
  id: ID!
  type: HatsSignerGateType!
  ownerHat: HatAuthorities!
  signerHats: [HatAuthorities!]!
  safe: String!
  minThreshold: BigInt!
  targetThreshold: BigInt!
  maxSigners: BigInt!
}

type JokeRaceEligibility @entity {
  id: ID!
  adminHat: HatAuthorities!
  currentContest: String!
  currentTermEnd: BigInt!
  currentTopK: BigInt!
}

type AllowListEligibility @entity {
  id: ID!
  ownerHat: HatAuthorities!
  arbitratorHat: HatAuthorities!
}

type HatsElectionEligibility @entity {
  id: ID!
  ballotBoxHat: HatAuthorities!
  adminHat: HatAuthorities!
}

type PassthroughModule @entity {
  id: ID!
  passthroughHat: HatAuthorities!
}
